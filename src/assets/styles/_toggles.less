@disabledLithenBy: 25%;

.toggleMixin (@yesColor, @noColor, @radius, @yesTextColor, @noTextColor, @height, @width, @yesText, @noText ) {
    position: relative;
    width: 100%;
    max-width: @width;
    min-width: @width;
    height: @height;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    cursor: pointer;
    .onoffswitch-checkbox {
        width: 100%;
        height: 100%;
        position: absolute;
        z-index: 2;
        opacity: 0;
        padding: 0;
        margin: 0;
        cursor: inherit;
        &:checked {
            &+.onoffswitch-label {
                .onoffswitch-inner {
                    margin-left: 0;
                }
                .onoffswitch-switch {
                    right: 0;
                    transform: translateX(-10%);
                    background-color: darken(@yesColor, 10%);
                }
            }
        }
    }
    .onoffswitch-label {
        display: block;
        height: @height;
        overflow: hidden;
        border-radius: @radius;
        cursor: inherit;
    }
    .onoffswitch-inner {
        display: block;
        width: 200%;
        margin-left: -100%;
        transition: margin 0.1s ease-in 0s;
        cursor: inherit;
        &:before,
        &:after {
            display: block;
            float: left;
            width: 50%;
            height: @height;
            padding: 0;
            line-height: @height;
            font-size: 16px;
            color: white;
            box-sizing: border-box;
        }
        &:before {
            content: @yesText;
            padding-left: 12px;
            background-color: @yesColor;
            color: @yesTextColor;
            text-align: left;
        }
        &:after {
            content: @noText;
            padding-right: 12px;
            background-color: @noColor;
            color: @noTextColor;
            text-align: right;
        }
    }
    .onoffswitch-switch {
        @switch: calc(~'@{width} / 3');
        display: block;
        width: @switch;
        height: @switch;
        background: darken(@noColor, 10%);
        position: absolute;
        top: 3px;
        bottom: 0;
        right: 50%;
        transform: translateX(-40%);
        border: 2px solid #FFFFFF;
        border-radius: @radius;
        box-sizing: border-box;
        transition: all 0.1s ease-in 0s;
        cursor: inherit;
    }
    &[disabled], &.disabled{
        .onoffswitch-switch {
            background: @noColor;
        }
        .onoffswitch-checkbox {
            &:checked +.onoffswitch-label .onoffswitch-switch {background-color: @yesColor;}
        }
    }
}

.genius-toggle {
    &-square {
        &-default {
            .toggleMixin(@main, @middleGray, 0, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@main, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 0, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-dark {
            .toggleMixin(@darkGray, @middleGray, 0, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@darkGray, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 0, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-success {
            .toggleMixin(@flatGreen, @middleGray, 0, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@flatGreen, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 0, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-error {
            .toggleMixin(@flatRed, @middleGray, 0, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@flatRed, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 0, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-warning {
            .toggleMixin(@flatOrange, @middleGray, 0, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@flatOrange, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 0, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
    }
    &-round {
        &-default {
            .toggleMixin(@main, @middleGray, 30px, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@main, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 30px, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-dark {
            .toggleMixin(@darkGray, @middleGray, 30px, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@darkGray, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 30px, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-success {
            .toggleMixin(@flatGreen, @middleGray, 30px, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@flatGreen, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 30px, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-error {
            .toggleMixin(@flatRed, @middleGray, 30px, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@flatRed, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 30px, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
        &-warning {
            .toggleMixin(@flatOrange, @middleGray, 30px, white, white, 40px, 100px, 'YES', 'NO');
            &[disabled], &.disabled{
                .toggleMixin(lighten(@flatOrange, @disabledLithenBy), lighten(@middleGray, @disabledLithenBy), 30px, white, white, 40px, 100px, 'YES', 'NO');
                pointer-events: none;
            }
        }
    }
}